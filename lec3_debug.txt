message: generated by message() function
warning: generated by warning() function, only get warning at the end of function
error: generated by stop() function
condition: created by programmer their own
log(-1)

printmsg<-function(x){
    if(x>0)
        print("x is greater than 0")
    else
        print("x is less than 0")
    invisible(x)
}

printmsg(0)
a=printmsg(0)
a
printmsg(NA)

printmsg2<-function(x){
    if(is.na(x))
        print("x is a missing value")
    else if(x>0)
        print("x is greater than 0")
    else
        print("x is less than 0")
    invisible(x)
}
x<-log(-1)
printmsg2(x)


traceback(): need called immediately called after error, prints out the function call stack, does nothing if no error
debug(): flags a function in "debug" mode so you can setp through it line by line
browser(): spends the execution of a func wherever it is called, and put it in debug mode
trace(): allows you to insert debugging code into a function at specific places
recover(): allows you to modify the error so that you can browse the func call sack


debug(lm)
lm(y-x)

options(error = recover)
read.csv("nosuchfile.csv")

